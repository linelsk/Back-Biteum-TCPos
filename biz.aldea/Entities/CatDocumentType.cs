// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;

namespace biz.premier.Entities
{
    public partial class CatDocumentType
    {
        public CatDocumentType()
        {
            CountryDocuments = new HashSet<CountryDocument>();
            DocumentAdministrativeContactsConsultants = new HashSet<DocumentAdministrativeContactsConsultant>();
            DocumentAdministrativeContactsServices = new HashSet<DocumentAdministrativeContactsService>();
            DocumentAirportTransportationServices = new HashSet<DocumentAirportTransportationService>();
            DocumentAreaOrientations = new HashSet<DocumentAreaOrientation>();
            DocumentAreasCoverageConsultants = new HashSet<DocumentAreasCoverageConsultant>();
            DocumentAreasCoverageServices = new HashSet<DocumentAreasCoverageService>();
            DocumentClientPartnerProfiles = new HashSet<DocumentClientPartnerProfile>();
            DocumentConsultantContactsConsultants = new HashSet<DocumentConsultantContactsConsultant>();
            DocumentConsultantContactsServices = new HashSet<DocumentConsultantContactsService>();
            DocumentCorporateAssistances = new HashSet<DocumentCorporateAssistance>();
            DocumentDepartures = new HashSet<DocumentDeparture>();
            DocumentDocumentManagements = new HashSet<DocumentDocumentManagement>();
            DocumentEntryVisas = new HashSet<DocumentEntryVisa>();
            DocumentGeneralContractPricingInfos = new HashSet<DocumentGeneralContractPricingInfo>();
            DocumentHomeFindings = new HashSet<DocumentHomeFinding>();
            DocumentHomePurchases = new HashSet<DocumentHomePurchase>();
            DocumentHomeSales = new HashSet<DocumentHomeSale>();
            DocumentInvoices = new HashSet<DocumentInvoice>();
            DocumentLeaseRenewals = new HashSet<DocumentLeaseRenewal>();
            DocumentLegalReviews = new HashSet<DocumentLegalReview>();
            DocumentLocalDocumentations = new HashSet<DocumentLocalDocumentation>();
            DocumentLocationCountries = new HashSet<DocumentLocationCountry>();
            DocumentManagements = new HashSet<DocumentManagement>();
            DocumentNotifications = new HashSet<DocumentNotification>();
            DocumentOfficeInformations = new HashSet<DocumentOfficeInformation>();
            DocumentOthers = new HashSet<DocumentOther>();
            DocumentPaymentConcepts = new HashSet<DocumentPaymentConcept>();
            DocumentPredecisionOrientations = new HashSet<DocumentPredecisionOrientation>();
            DocumentPropertyManagements = new HashSet<DocumentPropertyManagement>();
            DocumentRenewals = new HashSet<DocumentRenewal>();
            DocumentRentalFurnitureCoordinations = new HashSet<DocumentRentalFurnitureCoordination>();
            DocumentRequestPayments = new HashSet<DocumentRequestPayment>();
            DocumentResidencyPermits = new HashSet<DocumentResidencyPermit>();
            DocumentSchoolingSearches = new HashSet<DocumentSchoolingSearch>();
            DocumentServiceCountries = new HashSet<DocumentServiceCountry>();
            DocumentSettlingIns = new HashSet<DocumentSettlingIn>();
            DocumentTenancyManagements = new HashSet<DocumentTenancyManagement>();
            DocumentTransportations = new HashSet<DocumentTransportation>();
            DocumentVehicleConsultants = new HashSet<DocumentVehicleConsultant>();
            DocumentVehicleServices = new HashSet<DocumentVehicleService>();
            DocumentVisaDeregistrations = new HashSet<DocumentVisaDeregistration>();
            DocumentWorkPermits = new HashSet<DocumentWorkPermit>();
            LocalDocumentations = new HashSet<LocalDocumentation>();
            Renewals = new HashSet<Renewal>();
            RequestInformationDocuments = new HashSet<RequestInformationDocument>();
        }

        public int Id { get; set; }
        public string DocumentType { get; set; }
        public int? Type { get; set; }
        public int? CreatedBy { get; set; }
        public DateTime? CreatedDate { get; set; }
        public int? UpdatedBy { get; set; }
        public DateTime? UpdatedDate { get; set; }

        public virtual ICollection<CountryDocument> CountryDocuments { get; set; }
        public virtual ICollection<DocumentAdministrativeContactsConsultant> DocumentAdministrativeContactsConsultants { get; set; }
        public virtual ICollection<DocumentAdministrativeContactsService> DocumentAdministrativeContactsServices { get; set; }
        public virtual ICollection<DocumentAirportTransportationService> DocumentAirportTransportationServices { get; set; }
        public virtual ICollection<DocumentAreaOrientation> DocumentAreaOrientations { get; set; }
        public virtual ICollection<DocumentAreasCoverageConsultant> DocumentAreasCoverageConsultants { get; set; }
        public virtual ICollection<DocumentAreasCoverageService> DocumentAreasCoverageServices { get; set; }
        public virtual ICollection<DocumentClientPartnerProfile> DocumentClientPartnerProfiles { get; set; }
        public virtual ICollection<DocumentConsultantContactsConsultant> DocumentConsultantContactsConsultants { get; set; }
        public virtual ICollection<DocumentConsultantContactsService> DocumentConsultantContactsServices { get; set; }
        public virtual ICollection<DocumentCorporateAssistance> DocumentCorporateAssistances { get; set; }
        public virtual ICollection<DocumentDeparture> DocumentDepartures { get; set; }
        public virtual ICollection<DocumentDocumentManagement> DocumentDocumentManagements { get; set; }
        public virtual ICollection<DocumentEntryVisa> DocumentEntryVisas { get; set; }
        public virtual ICollection<DocumentGeneralContractPricingInfo> DocumentGeneralContractPricingInfos { get; set; }
        public virtual ICollection<DocumentHomeFinding> DocumentHomeFindings { get; set; }
        public virtual ICollection<DocumentHomePurchase> DocumentHomePurchases { get; set; }
        public virtual ICollection<DocumentHomeSale> DocumentHomeSales { get; set; }
        public virtual ICollection<DocumentInvoice> DocumentInvoices { get; set; }
        public virtual ICollection<DocumentLeaseRenewal> DocumentLeaseRenewals { get; set; }
        public virtual ICollection<DocumentLegalReview> DocumentLegalReviews { get; set; }
        public virtual ICollection<DocumentLocalDocumentation> DocumentLocalDocumentations { get; set; }
        public virtual ICollection<DocumentLocationCountry> DocumentLocationCountries { get; set; }
        public virtual ICollection<DocumentManagement> DocumentManagements { get; set; }
        public virtual ICollection<DocumentNotification> DocumentNotifications { get; set; }
        public virtual ICollection<DocumentOfficeInformation> DocumentOfficeInformations { get; set; }
        public virtual ICollection<DocumentOther> DocumentOthers { get; set; }
        public virtual ICollection<DocumentPaymentConcept> DocumentPaymentConcepts { get; set; }
        public virtual ICollection<DocumentPredecisionOrientation> DocumentPredecisionOrientations { get; set; }
        public virtual ICollection<DocumentPropertyManagement> DocumentPropertyManagements { get; set; }
        public virtual ICollection<DocumentRenewal> DocumentRenewals { get; set; }
        public virtual ICollection<DocumentRentalFurnitureCoordination> DocumentRentalFurnitureCoordinations { get; set; }
        public virtual ICollection<DocumentRequestPayment> DocumentRequestPayments { get; set; }
        public virtual ICollection<DocumentResidencyPermit> DocumentResidencyPermits { get; set; }
        public virtual ICollection<DocumentSchoolingSearch> DocumentSchoolingSearches { get; set; }
        public virtual ICollection<DocumentServiceCountry> DocumentServiceCountries { get; set; }
        public virtual ICollection<DocumentSettlingIn> DocumentSettlingIns { get; set; }
        public virtual ICollection<DocumentTenancyManagement> DocumentTenancyManagements { get; set; }
        public virtual ICollection<DocumentTransportation> DocumentTransportations { get; set; }
        public virtual ICollection<DocumentVehicleConsultant> DocumentVehicleConsultants { get; set; }
        public virtual ICollection<DocumentVehicleService> DocumentVehicleServices { get; set; }
        public virtual ICollection<DocumentVisaDeregistration> DocumentVisaDeregistrations { get; set; }
        public virtual ICollection<DocumentWorkPermit> DocumentWorkPermits { get; set; }
        public virtual ICollection<LocalDocumentation> LocalDocumentations { get; set; }
        public virtual ICollection<Renewal> Renewals { get; set; }
        public virtual ICollection<RequestInformationDocument> RequestInformationDocuments { get; set; }
    }
}